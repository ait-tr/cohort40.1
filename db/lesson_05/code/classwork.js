use('crud_db')

// * —Å–æ–∑–¥–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏

db.animals.insertMany([
  {kind: 'tiger', weight: 300, name: 'Barsik', predatory: true},
  {kind: 'moose', weight: 350, name: 'Arnold', predatory: false},
  {kind: 'chicken', weight: 5, name: 'Ryaba', predatory: false},
  {kind: 'shark', weight: 100, name: 'Sharp', predatory: true},
  {kind: 'cheetah', weight: 80, name: 'Chester', predatory: true}
])

// * –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

db.animals.insertOne({kind: 'shark', weight: 90, name: 'Jaws', predatory:true})

// ! CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ (Create, Read, Update, Delete)

// ? updateOne(), updateMany()

// * $set, $unset, $inc, $rename, $push, $pull - –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è

db.animals.updateMany({kind: 'shark'}, {$set: {predatory: true}})

// –∏–∑–º–µ–Ω–µ–Ω–∏–µ —É –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏

db.animals.updateMany({}, {$inc: {weight: -2}})

// * db.animals.find() - –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏

// * updateOne() - –∏–∑–º–µ–Ω—è–µ—Ç –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é

// * –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ id, —Ç–æ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –º–µ—Ç–æ–¥ ObjectId(), –≤ –∫–æ—Ç–æ—Ä—É—é –ø–µ—Ä–µ–¥–∞–µ—Ç–µ —Å—Ç—Ä–æ–∫—É —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º

db.animals.updateOne({_id: ObjectId('664c568c749319d52b26efb3')},{$set:{weight: 5}})

// * –æ–ø–µ—Ä–∞—Ç–æ—Ä $unset —É–¥–∞–ª—è–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞

db.animals.updateOne({kind: 'moose'},{$unset:{predatory: ''}})

db.animals.updateOne({kind: 'moose'},{$set:{predatory: false}})

db.animals.updateOne({kind: 'cheetah'}, {$push: {foods: 'chitos'}})

// * $pull - —É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –∏–∑  –º–∞—Å—Å–∏–≤–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∫–ª—é—á—É

db.animals.updateOne({kind: 'cheetah'}, {$pull: {foods: 'chitos'}})

// * $push –¥–æ–±–∞–≤–ª—è–µ—Ç –º–∞—Å—Å–∏–≤ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∫–ª—é—á—É

db.animals.updateOne({kind: 'cheetah'}, {$push: {foods: 'chips'}})

// * –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞ —Ä–∞–∑ –≤ –º–∞—Å—Å–∏–≤–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä $each

db.animals.updateOne(
  { kind: 'cheetah' },
  { $push: { foods: { $each: ['squid', 'hinkali'] } } }
);

// * $rename –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –∏–º—è —Å–≤–æ–π—Å—Ç–≤–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö

db.animals.updateMany({}, {$rename: {predatory: "isPredator"}})

// * 1. CREATE: insertOne(), insertMany()
// * 2. READ: findOne(), findMany()
// * 3. UPDATE: updateOne(), updateMany()
// * 4. DELETE: deleteOne(), deleteMany()

// ? deleteOne(), deleteMany()

db.animals.deleteOne({_id: ObjectId('664c588f138aab90fb64a1b1')})

db.animals.deleteOne({name: "Sharp"})

// ? REFERENCES

db.posts.insertOne({
  likes: 10,
  text: 'Hello, nice to see you here!'
})

db.comments.insertMany([
  {email: "123@google.com", message: 'Hi!', post_id: ObjectId("664c724af3a5021dd4e95a5f")},
  {email: "345@google.com", message: 'Ohh! nice to see you', post_id: ObjectId("664c724af3a5021dd4e95a5f")},
  {email: "679@google.com", message: 'üôÜ‚Äç‚ôÇÔ∏è', post_id: ObjectId("664c724af3a5021dd4e95a5f")}
])

// ? aggregate() - –º–µ—Ç–æ–¥ –¥–ª—è —Å–≤—è–∑–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –æ–¥–∏–Ω pipeline

// * –æ–ø–µ—Ä–∞—Ç–æ—Ä $lookup - –∞–Ω–∞–ª–æ–≥ join –∏–∑ postgres

// * from - c –∫–∞–∫–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –æ–±—ä–µ–¥–∏–Ω—è–µ–º
// * localField - –∫–ª—é—á –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –∫ –∫–æ—Ç–æ—Ä–æ–π –æ–±—Ä–∞—â–∞–µ–º—Å—è
// * foreignField - –∫–ª—é—á –∏–∑ —Å–≤—è–∑–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
// * as - –ø—Å–µ–≤–¥–æ–Ω–∏–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

db.comments.aggregate({$lookup: {
  from: 'posts',
  localField: "post_id",
  foreignField: "_id",
  as: "info_from_post"
}})

// –ø–æ–ª—É—á–∏–º –≤—Å–µ—Ö —Ö–∏—â–Ω—ã—Ö –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–µ—Å—É

db.animals.aggregate([
  { $match: { isPredator: true } },
  { $sort: { weight: -1 } }
])

// –ø–æ—Å—á–∏—Ç–∞–µ–º –∫–æ–ª-–≤–æ –≤—Å–µ—Ö –Ω–µ —Ö–∏—â–Ω–∏–∫–æ–≤

db.animals.aggregate([
  { $match: { isPredator: false } },
  {$count: "not_predators_numbers"}
 ])

 // * $sample - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞: –≤ size –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–æ–ª-–≤–æ —Å–ª—É—á–∞–π–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤

 db.animals.aggregate([
  {$sample: {size: 2}}
 ])
