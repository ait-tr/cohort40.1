
Задания на минипроект (выбрать один из вариантов)

Вариант 1. Управление списком студентов с курсами

Цель: Создать программу для управления списком студентов, включая информацию о курсах, которые они посещают.

Задачи:

    Создать класс Student с полями для имени, фамилии, номера студенческого билета и списка курсов.
    Создать класс Course с информацией о названии курса и списке студентов, записанных на курс.
    Реализовать класс StudentManager, который использует коллекцию, где ключом является номер студенческого билета, а значением - объект Student.
    В StudentManager реализовать методы для добавления студентов, их удаления, поиска по номеру студенческого билета,
    добавления курса студенту и вывода всех студентов на определенном курсе.

Вариант 2. Система управления автомобильным салоном с оценками моделей

Цель: Разработать систему для управления автомобилями в автосалоне, включая функцию оценки моделей.

Задачи:

    Создать класс Car с информацией о марке, модели, годе выпуска, цене и рейтинге автомобиля.
    Создать класс CarDealer, который использует HashMap для хранения автомобилей, где ключом является
    уникальный идентификатор автомобиля (например, VIN-номер), а значением - объект Car.
    В классе CarDealer реализовать методы для добавления новых автомобилей, удаления автомобилей из списка,
    обновления информации о конкретной машине (например, цены или рейтинга), а также поиска автомобилей
    по различным критериям (марка, модель, год выпуска).
    Добавить функционал для оценки автомобилей покупателями и сортировки автомобилей по рейтингу, цене или году выпуска.
    Реализовать возможность вывода информации о всех автомобилях в наличии или автомобилях определенной марки.

Вариант 3. Система управления персоналом компании

Цель: Создать комплексную систему для управления сотрудниками и отделами компании.

Задачи:

    Создать классы Employee (с информацией о имени, фамилии, должности и отделе) и Department (с информацией
    о названии отдела и списке сотрудников).
    Реализовать класс Company, который использует коллекцию для хранения отделов, где ключом является название
    отдела, а значением - объект Department.
    В классе Company реализовать операции CRUD (добавление, поиск, удаление) для сотрудников и отделов,
    включая перевод сотрудников между отделами, обновление информации о сотрудниках и отделах, поиск сотрудников
    по различным критериям (отдел, должность, имя).
    Добавить функционал для вывода отчетов, например, список всех сотрудников компании, сотрудники определенного
    отдела, количество сотрудников в компании.


Срок выполнения - 11 марта