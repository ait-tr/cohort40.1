Попроще:

   1 Создать ArrayList из 10 элементов, отсортировать его по возрастанию и вывести на экран.

   2 Создать LinkedList из 10 элементов, удалить элементы с индексами, которые хранятся другой коллекции в Set и вывести на экран, то что останется от List.

   3 Создать HashMap, где ключом является число типа Integer, а значением - его квадрат. Вывести на экран все элементы HashMap.

   4 Создать HashSet, добавить в него несколько строк и проверить, содержит ли он определенную строку.

   5 Создать TreeMap, где ключом является строка, а значением - ее длина. Вывести на экран все элементы TreeMap.

   6 Создать PriorityQueue из 10 элементов типа Integer, добавить несколько элементов, извлечь минимальный элемент и вывести на экран.

   7 Создать Stack, добавить в него несколько элементов. Проверить есть ли в коллекции заданный элемент. Если есть,то найти его глубину и вывести на экран.

   8 Создать ArrayDeque, добавить в него несколько элементов с каждой стороны, извлечь элементы с одной из сторон и вывести на экран.

   9 Создать TreeMap, где ключом является число типа Integer, а значением - его факториал. Вывести на экран все элементы TreeMap.

   10 Создать HashSet из нескольких элементов, создать LinkedList из тех же элементов и вывести на экран элементы LinkedList в том порядке, в котором они были добавлены.

--------

   Несколько сложнее:

    1   Создать класс Student со свойствами name и grade (оценка), затем создать список ArrayList,
        заполнить его несколькими объектами Student и отсортировать список по оценке в порядке убывания.

    2   Создать отображение TreeMap, где ключом является объект Date (дата), а значением - список строк.
        Затем добавить несколько строк в список для каждой даты и вывести все элементы отображения на консоль в порядке возрастания даты.

    3   Создать множество LinkedHashSet и добавить в него несколько объектов класса Person, у которых есть свойства name и age.
        Затем перебрать все элементы множества и вывести на консоль только тех людей, возраст которых меньше 30 лет.

    4   Создать очередь PriorityQueue и добавить в нее несколько элементов, у которых есть свойства name и priority.
        Затем извлечь элементы из очереди в порядке приоритета и вывести их на консоль.

    5   Создать класс Book со свойствами title, author и year (год издания), затем создать список LinkedList, заполнить
        его несколькими объектами Book и удалить из списка все книги, которые были изданы до 2000 года.

    6   Создать множество TreeSet и добавить в него несколько объектов класса Point, у которых есть свойства x и y.
        Затем перебрать все элементы множества и вывести на консоль только те точки, у которых x > y.

    7   Создать отображение LinkedHashMap, где ключом является объект Time (время), а значением - список строк.
        Затем добавить несколько строк в список для каждого времени и вывести все элементы отображения на консоль в порядке возрастания времени.

    8  Создать множество HashSet и добавить в него несколько строк. Затем создать второе множество и добавить в него
        те же самые строки, но в другом порядке. Затем вывести на консоль только те строки, которые есть в обоих множествах.

    9   Создать отображение HashMap, где ключом является объект класса Country, а значением - список строк
        (названия городов в этой стране). Затем добавить несколько городов для каждой страны и вывести все страны на консоль в алфавитном порядке.

    10  Создать класс Employee со свойствами name, department и salary, затем создать отображение TreeMap,
        где ключом является отдел, а значением - список сотрудников, работающих в этом отделе.
        Затем добавить несколько сотрудников в каждый отдел и вывести на консоль среднюю зарплату для каждого отдела.