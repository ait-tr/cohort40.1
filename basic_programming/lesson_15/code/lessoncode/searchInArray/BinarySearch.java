package lesson_15.code.lessoncode.searchInArray;

import java.util.Arrays;

public class BinarySearch {
    public static void main(String[] args) {
        /*
        {10,29,33,47,52,643,723,818,999} - исходный массив

        предположим что нам нужно найти индекс для элемента 47
        ответить на вопрос - есть ли такой элемент и какой у него индекс если он есть

        1-я итерация
        находим средний элемент нашего массива -> index = 4, element = 52
        далее мы сравниваем наш элемент и "середину" и смотрим больше или меньше значение

         так как наш элемент поиска меньше значения сердины, то нас интересует левая часть нашего массива

         2-я итерация происходит только с "левой" частью
         то есть мы будем продолжать поиск среди {10,29,33,47,52}

         находим середину-> index = 2, значение = 33
         так как наш элемент поиска БОЛЬШЕ чес середина, то
         будем продолжать поиск среди {33,47,52}

         3-я итерация -> index = 3, значение = 47
         наш элемент совпал с элемента массива, нужный индекс = 3



         {1,3,5,7,9,12,15,19,21,26,29,35,39,43,48,50,100} - 17 элементов

         ищем число = 19

         17 / 2 = 8.5
         int(8.5) = 8

         1->
          {1,3,5,7,9,12,15,19,21,26,29,35,39,43,48,50,100}
          середина = 21, индекс = 8

          сравниваем наш элемент поиска 19 со значением элемента массива с индексом 8 (значение 21)

          2-> проводится среди элементов из "левой" части массива

           {1,3,5,7,9,12,15,19,21}
           середина будет иметь индекс 4 элемент массива = 9
          сравниваем наш элемент поиска 19 со значением элемента массива с индексом 4 (значение 9)

          3-> проводится среди элементов из "правой" части массива
          {9,12,15,19,21}

          середина будет иметь индекс 6 элемент массива = 15
          сравниваем наш элемент поиска 19 со значением элемента массива с индексом 6 (значение 15)


          4-> проводится среди элементов из "правой" части массива
          {15,19,21}

          середина будет иметь индекс 7 элемент массива = 19
          сравниваем наш элемент поиска 19 со значением элемента массива с индексом 7 (значение 19)

          элементы равны, искомый индекс = 7


Если у нас в массиве количество элементов = 1 000 000, то количество шагов необходимых для поиска будет равно: 29 итерациям

          1 000 000
          500 000
          250 000
          125 000
          62 500
          31 250
          15 625
          7 812
          3 906
          1 953
          976
          488
          244
          122
          61
          30
          15
          7
          3
          1


         */

        int[] arrayForSearch = {1,3,5,7,9,12,15,19,21,26,29,35,39,43,48,50,100};

        int elementForSearch = 19;

        SearchInArray search = new SearchInArray();

        int indexSearch = search.linearSearch(arrayForSearch,elementForSearch);

        if (indexSearch >= 0) {
            System.out.println("Search element " + elementForSearch + " have index " + indexSearch);
        } else {
            System.out.println("Search element " + elementForSearch + " not found ");

        }

        System.out.println("Индекс числа 29 =>  " + Arrays.binarySearch(arrayForSearch, 29));

    }
}
